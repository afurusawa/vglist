"use strict";

angular.module("app", [ "ngRoute" ]), angular.module("app").controller("gameController", [ "$scope", "$http", "$log", function(a, b, c) {
    c.log("game controller active"), a.userData = "", a.gameState = {
        added: !1,
        addText: "add to list",
        completed: !1,
        completeText: "complete",
        playingNow: !1,
        playingNowText: "currently playing",
        initRan: !1
    }, a.$watchGroup([ "init", "rating", "hoursPlayed" ], function(c, d) {
        if (console.log(JSON.stringify(c[1]) + " " + JSON.stringify(d[1]) + ", " + JSON.stringify(c[2]) + " " + JSON.stringify(d[2])), 
        console.log(JSON.stringify(c[0]) + " " + JSON.stringify(d[0])), c[1] != d[1] && "undefined" != typeof d[1]) {
            console.log("updating rating..." + a.rating);
            var e = {
                gameId: a.init.gameId,
                rating: a.rating
            };
            b.post("/updateGameRating", e).then(function(a) {
                console.log("updated rating");
            });
        }
        if (c[2] != d[2] && "undefined" != typeof d[2]) {
            console.log("updating hours played..." + a.hoursPlayed);
            var e = {
                gameId: a.init.gameId,
                hoursPlayed: a.hoursPlayed
            };
            b.post("/updateHoursPlayed", e).then(function(a) {
                console.log("updated hours played");
            });
        }
        c[0].userId && !a.gameState.initRan && b.get("/" + a.init.userId + "/" + a.init.gameId).then(function(b) {
            console.log("getting user info about the game"), a.userData = b.data;
            var c = b.data;
            c && (a.gameState.added = !0, a.gameState.addText = "added"), c.rating ? (a.rating = c.rating, 
            a.rateButton.visible = !1) : a.rating = 0, c.hoursPlayed ? a.hoursPlayed = c.hoursPlayed : a.hoursPlayed = 0, 
            c.completed && (a.gameState.completed = !0, a.gameState.completeText = "completed"), 
            a.gameState.playingNow = c.playingNow, a.gameState.initRan = !0;
        }).catch(function(a) {
            console.error("error", a.status, a.data);
        });
    }), a.rateButton = {
        visible: !0
    }, a.rateGame = function() {
        a.rateButton.visible = !a.rateButton.visible;
    }, a.addToList = function(c, d) {
        console.log("clicked add button w/ id: " + c.toString());
        var e = {
            gameId: c,
            gameName: d
        };
        b.post("/addToGameList", e).then(function(b) {
            a.gameState.added = !0, a.gameState.addText = "added", a.rating = 0, a.hoursPlayed = 0, 
            a.gameState.initRan = !0;
        });
    }, a.removeFromList = function(c) {
        var d = {
            gameId: c
        };
        b.post("/removeFromGameList", d).then(function(b) {
            console.log("removing game from list"), a.gameState.added = !1, a.rating = 0, a.hoursPlayed = 0, 
            a.gameState.initRan = !1;
        }).catch(function(a) {
            console.log("what the fuck happened");
        });
    }, a.toggleCompleted = function(c, d) {
        console.log("clicked button w/ id: " + c.toString());
        var e = {
            gameId: c,
            completed: !d
        };
        b.post("/toggleCompleted", e).then(function(b) {
            console.log("res: " + JSON.stringify(b, null, 4)), d ? (a.gameState.completed = !1, 
            a.gameState.completeText = "complete") : (a.gameState.completed = !0, a.gameState.completeText = "completed");
        });
    }, a.toggleNowPlaying = function(c, d) {
        var e = {
            gameId: c,
            playingNow: !d
        };
        b.post("/toggleNowPlaying", e).then(function(b) {
            a.gameState.playingNow = !d;
        });
    };
} ]), angular.module("app").controller("listController", [ "$scope", "$http", "$log", function(a, b, c) {
    c.log("list controller active");
    new Array();
    b.get("/allGames").then(function(b) {
        a.list = b.data;
    }), b.get("/allUsers").then(function(b) {
        a.userlist = b.data;
    }), a.button = "add to list", a.addToList = function(a, c) {
        console.log("clicked add button w/ id: " + a.toString());
        var d = {
            gameId: a,
            gameName: c
        };
        b.post("/addToGameList", d).then(function(a) {
            console.log("res: " + JSON.stringify(a, null, 4));
        });
    };
} ]), angular.module("app").controller("searchController", [ "$scope", "$http", "$log", function(a, b, c) {
    a.search = "", a.$watch("search", function() {
        a.search.length >= 3 && b.get("/search/" + a.search).then(function(b) {
            console.log("res: " + JSON.stringify(b, null, 4)), a.results = b.data;
        });
    });
} ]), angular.module("app").controller("submitGameController", [ "$scope", "$http", "$log", function(a, b, c) {
    a.platformData = [], a.consoles = [ {
        name: "Playstation 4",
        manufacturer: "Sony",
        state: !1
    }, {
        name: "Xbox One",
        manufacturer: "Microsoft",
        state: !1
    }, {
        name: "Wii U",
        manufacturer: "Nintendo",
        state: !1
    }, {
        name: "PlayStation 3",
        manufacturer: "Sony",
        state: !1
    }, {
        name: "Wii",
        manufacturer: "Nintendo",
        state: !1
    }, {
        name: "Xbox 360",
        manufacturer: "Microsoft",
        state: !1
    }, {
        name: "Xbox",
        manufacturer: "Microsoft",
        state: !1
    }, {
        name: "GameCube",
        manufacturer: "Nintendo",
        state: !1
    }, {
        name: "PlayStation 2",
        manufacturer: "Sony",
        state: !1
    }, {
        name: "Dreamcast",
        manufacturer: "Sega",
        state: !1
    }, {
        name: "Nintendo 64",
        manufacturer: "Nintendo",
        state: !1
    }, {
        name: "PlayStation",
        manufacturer: "Sony",
        state: !1
    } ], a.handhelds = [ {
        name: "PlayStation Vita",
        manufacturer: "Sony",
        state: !1
    }, {
        name: "Nintendo 3DS",
        manufacturer: "Nintendo",
        state: !1
    }, {
        name: "PlayStation Portable",
        manufacturer: "Sony",
        state: !1
    }, {
        name: "Nintendo DS",
        manufacturer: "Nintendo",
        state: !1
    }, {
        name: "Game Boy Advance",
        manufacturer: "Nintendo",
        state: !1
    }, {
        name: "Game Boy Color",
        manufacturer: "Nintendo",
        state: !1
    } ], a.toggle = function() {
        this.unit.state = !this.unit.state, a.platformData = [];
        for (var b = 0; b < a.consoles.length; b++) a.consoles[b].state && a.platformData.push(a.consoles[b].name);
    }, a.submitGame = function() {
        var c = {
            title: a.game.title,
            series: a.game.series,
            released: a.game.released,
            developer: a.game.developer,
            publisher: a.game.publisher,
            platform: a.platformData
        };
        console.log(JSON.stringify(c, null, 4)), b.post("/addGame", c).then(function(a) {});
    };
} ]), angular.module("app").controller("headerController", [ "$scope", "$http", "$log", function(a, b, c) {
    function d(c, d) {
        for (var e = 0; e < c.length; e++) console.log("GET: " + d.userId + "/" + JSON.stringify(c[e])), 
        b.get("/" + d.userId + "/" + c[e]._id).then(function(b) {
            console.log("match found!");
            var c = {
                game: b.data[0],
                matches: !0
            };
            a.list.push(c);
        }).catch(function(a) {});
    }
    a.login = {
        state: !1
    }, a.toggle = function() {
        a.login.state = !a.login.state;
    }, a.list = [];
    var e;
    b.get("/myGames").then(function(a) {
        e = a.data[0];
    }), a.search = "", a.$watch("search", function() {
        a.search.length >= 3 && b.get("/search/" + a.search).then(function(b) {
            a.results = b.data, d(b.data, e);
        });
    });
} ]), angular.module("app").controller("profileController", [ "$scope", "$http", "$log", function(a, b, c) {
    c.log("profile controller active"), b.get("/games/").then(function(b) {
        a.list = b.data;
    });
} ]), angular.module("app").controller("dashboardController", [ "$scope", "$http", "$log", function(a, b, c) {
    c.log("dashboard controller active"), b.get("/myGames").then(function(b) {
        a.allData = {
            gameList: [],
            currentlyPlaying: [],
            completed: [],
            statistics: {
                games: 0,
                completed: 0,
                hours: 0,
                averageRating: 0
            }
        }, console.log(b.data[0]), a.allData.gameList = b.data[0].gameList;
        for (var c = 0; c < b.data[0].gameList.length; c++) {
            var d = b.data[0].gameList[c];
            b.data[0].gameList[c].playingNow && a.allData.currentlyPlaying.push(b.data[0].gameList[c]), 
            b.data[0].gameList[c].completed && a.allData.completed.push(b.data[0].gameList[c]), 
            a.allData.statistics.hours += d.hoursPlayed;
        }
        a.allData.statistics.games = b.data[0].gameList.length;
    });
} ]);